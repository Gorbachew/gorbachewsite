{"version":3,"sources":["components/SideMenu/images/arrow.svg","components/Header/Header.js","components/App/App.js","serviceWorker.js","context/navState.js","components/SideMenu/SideMenuButton.jsx","hooks/onClickOutside.js","components/Helpers/useWindowDimensions.js","components/Body/TopBar/TopBar.jsx","components/Body/GameButtons/GameButtons.jsx","components/Body/MainPanel/MainPanel.jsx","components/Body/InfoPanel/InfoPanel.jsx","components/SideMenu/SideMenu.js","components/Pages/Main.js","components/Pages/Latest.js","index.js"],"names":["module","exports","Header","App","Boolean","window","location","hostname","match","MenuContext","createContext","isMenuOpen","toggleMenu","NavState","children","useState","Provider","value","toggleMenuMode","MenuButton","styled","button","Bar","span","HamburgerButton","useContext","className","aria-label","onClick","useOnClickOutside","ref","handler","useEffect","listener","event","current","contains","target","document","addEventListener","removeEventListener","getWindowDimensions","width","innerWidth","height","innerHeight","useWindowDimensions","windowDimensions","setWindowDimensions","handleResize","TopBar","node","useRef","SideMenuButton","clickWayToSuccess","open","clickCrystalPlanets","clickClickDefender","alert","GameButtons","name","MainPanel","InfoPanel","Menu","nav","props","css","SideMenu","a","arrow","defaultProps","Main","data","Latest","JSON","stringify","ReactDOM","render","StrictMode","exact","path","component","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f9ac9319.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arrow.6ed24328.svg\";","import React from 'react';\r\n\r\n\r\nconst Header = () => {\r\n    return(\r\n        <header>\r\n            <title>GorbachewHUB</title>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\nimport './App.css';\nimport Header from '../Header/Header'\n\n\n\n\nfunction App(){\n  return (\n    <Header/>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { createContext, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const MenuContext = createContext({\r\n  isMenuOpen: true,\r\n  toggleMenu: () => {},\r\n});\r\n\r\nconst NavState = ({ children }) => {\r\n  const [isMenuOpen, toggleMenu] = useState(false);\r\n\r\n  function toggleMenuMode() {\r\n    toggleMenu(!isMenuOpen);\r\n  }\r\n\r\n  return (\r\n    <MenuContext.Provider value={{ isMenuOpen, toggleMenuMode }}>{children}</MenuContext.Provider>\r\n  );\r\n};\r\n\r\nNavState.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default NavState;","import React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport { MenuContext } from '../../context/navState';\r\n\r\nconst MenuButton = styled.button`\r\n  display: block;\r\n  transform-origin: 16px 11px;\r\n  float: left;\r\n  margin-right: 29px;\r\n  outline: 0;\r\n  border: 0;\r\n  padding: 12px;\r\n  background: none;\r\n\r\n  span {\r\n    transition: all 0.3s cubic-bezier(0.645, 0.045, 0.355, 1);\r\n  }\r\n\r\n  :focus {\r\n    border: medium none rgb(111, 255, 176);\r\n    box-shadow: rgb(111, 255, 176) 0 0 2px 2px;\r\n    outline: 0;\r\n  }\r\n\r\n  :hover {\r\n    span:nth-of-type(1) {\r\n      width: 33px;\r\n    }\r\n\r\n    span:nth-of-type(2) {\r\n      width: 40px;\r\n    }\r\n\r\n    span:nth-of-type(3) {\r\n      width: 30px;\r\n    }\r\n  }\r\n\r\n  &.active {\r\n    span:nth-of-type(1) {\r\n      transform: rotate(45deg) translate(10px, 10px);\r\n      width: 40px;\r\n    }\r\n\r\n    span:nth-of-type(2) {\r\n      opacity: 0;\r\n      pointer-events: none;\r\n    }\r\n\r\n    span:nth-of-type(3) {\r\n      transform: rotate(-45deg) translate(7px, -7px);\r\n      width: 40px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Bar = styled.span`\r\n  display: block;\r\n  width: 40px;\r\n  height: 5px;\r\n  margin-bottom: 7px;\r\n  background-color: #fff;\r\n`;\r\n\r\nconst HamburgerButton = () => {\r\n  const { isMenuOpen, toggleMenuMode } = useContext(MenuContext);\r\n\r\n  const clickHandler = () => {\r\n    toggleMenuMode();\r\n  };\r\n\r\n  return (\r\n    <MenuButton\r\n      className={isMenuOpen ? 'active' : ''}\r\n      aria-label=\"Открыть главное меню\"\r\n      onClick={clickHandler}\r\n    >\r\n      <Bar />\r\n      <Bar />\r\n      <Bar />\r\n    </MenuButton>\r\n  );\r\n};\r\n\r\nexport default HamburgerButton;","import { useEffect } from 'react';\r\n\r\nconst useOnClickOutside = (ref, handler) => {\r\n  useEffect(() => {\r\n    const listener = event => {\r\n      if (!ref.current || ref.current.contains(event.target)) {\r\n        return;\r\n      }\r\n      handler(event);\r\n    };\r\n    document.addEventListener('mousedown', listener);\r\n    return () => {\r\n      document.removeEventListener('mousedown', listener);\r\n    };\r\n  }, [ref, handler]);\r\n};\r\n\r\nexport default useOnClickOutside;","import { useState, useEffect } from 'react';\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return {\r\n    width,\r\n    height\r\n  };\r\n}\r\n\r\nexport default function useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}","import React, { useRef, useContext } from 'react';\r\nimport './TopBar.scss';\r\nimport SideMenuButton from '../../SideMenu/SideMenuButton';\r\nimport useOnClickOutside from '../../../hooks/onClickOutside';\r\nimport { MenuContext } from '../../../context/navState';\r\nimport useWindowDimensions from '../../Helpers/useWindowDimensions'\r\n\r\nconst TopBar = () => {\r\n\r\n    const node = useRef();\r\n    const { isMenuOpen, toggleMenuMode } = useContext(MenuContext);\r\n    const { width } = useWindowDimensions();\r\n    useOnClickOutside(node, () => {\r\n      // Only if menu is open\r\n      if (isMenuOpen) {\r\n        toggleMenuMode();\r\n      }\r\n    });\r\n\r\n    return(\r\n        <div className=\"topbar\">\r\n            { width <= 700 && <SideMenuButton /> } \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TopBar;","import React from 'react';\r\nimport './GameButtons.scss'\r\n\r\nconst clickWayToSuccess = () => {\r\n    window.open(\"https://play.google.com/store/apps/details?id=gorbachew.pythonanywhere.ru\")\r\n};\r\n\r\nconst clickCrystalPlanets = () => {\r\n    window.open(\"https://play.google.com/store/apps/details?id=com.gorbachew.crystalplanets\");\r\n};\r\n\r\nconst clickClickDefender = () => {\r\n    alert(\"Еще не вышла\");\r\n};\r\n\r\n\r\nconst GameButtons = () => {\r\n    return(\r\n        <div className=\"gameButtons\">\r\n            <button className=\"btnWayToSuccess btnInGameBar btn\" name=\"btnWayToSuccess\" onClick={clickWayToSuccess}></button>\r\n            <button className=\"btnCrystalPlanets btnInGameBar btn\" name=\"btnCrystalPlanets\" onClick={clickCrystalPlanets}></button>\r\n            <button className=\"btnClickDefender btnInGameBar btn\" name=\"btnClickDefender\" onClick={clickClickDefender}></button>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default GameButtons;","import React from 'react';\r\nimport './MainPanel.scss'\r\nimport GameButtons from '../GameButtons/GameButtons'\r\nimport useWindowDimensions from '../../Helpers/useWindowDimensions'\r\n\r\n\r\n\r\nconst MainPanel = () => {\r\n\r\n    const { width } = useWindowDimensions();\r\n     return(\r\n        <div className=\"mainPanel\">\r\n            <div className=\"logo\"><p className=\"logo logoPart1\">Gorbachew</p><p className=\"logo logoPart2\">HUB</p></div>\r\n            { width >= 700 && <GameButtons /> };\r\n            { width >= 700 && <p className=\"textUnderBtnsGame\">my games</p> };\r\n        </div>\r\n     );\r\n};\r\n\r\n\r\nexport default MainPanel;","import React from 'react';\r\nimport './InfoPanel.scss'\r\n\r\nconst InfoPanel = () => {\r\n    return(\r\n        <div className=\"infoPanel\">\r\n\t\t\t<div className=\"WelcomeBox infoBoxes\">\r\n\t\t\t\t<h1>Welcome to my site!</h1>\r\n\t\t\t</div>\r\n\t\t</div>\t\r\n    );\r\n};\r\n\r\n\r\nexport default InfoPanel;","//https://build-in-saratov.com/hamburger-menu/\r\n\r\nimport React, { useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled, { css } from 'styled-components';\r\nimport { MenuContext } from '../../context/navState';\r\nimport arrow from './images/arrow.svg';\r\nimport GameButtons from '../Body/GameButtons/GameButtons'\r\nimport './SideMenuButton';\r\n\r\nconst Menu = styled.nav`\r\n  position: fixed;\r\n  top: 55px;\r\n  left: 0px;\r\n  bottom: 0px;\r\n  z-index: 3;\r\n  display: block;\r\n  width: 400px;\r\n  max-width: 100%;\r\n  margin-top: 0px;\r\n  padding-top: 100px;\r\n  padding-right: 0px;\r\n  border-right: 4px solid white;\r\n  align-items: stretch;\r\n  background-color: black;\r\n  transform: translateX(-100%);\r\n  transition: all 0.3s cubic-bezier(0.645, 0.045, 0.355, 1);\r\n  \r\n\r\n  ${props =>\r\n    props.open &&\r\n    css`\r\n      transform: translateX(0);\r\n    `}\r\n`;\r\n\r\nexport const MenuLink = styled.a`\r\n  position: relative;\r\n  display: block;\r\n  text-align: left;\r\n  max-width: 100%;\r\n  padding-top: 25px;\r\n  padding-bottom: 25px;\r\n  padding-left: 16%;\r\n  background-image: url(${arrow});\r\n  background-position: 88% 50%;\r\n  background-size: 36px;\r\n  background-repeat: no-repeat;\r\n  transition: background-position 300ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\r\n  text-decoration: none;\r\n  color: #fff;\r\n  font-size: 32px;\r\n  line-height: 120%;\r\n  font-weight: 500;\r\n\r\n  :hover {\r\n    background-position: 90% 50%;\r\n  }\r\n`;\r\n\r\nexport const SideMenu = ({ children }) => {\r\n  const { isMenuOpen } = useContext(MenuContext);\r\n\r\n  return <Menu open={isMenuOpen}>{children}</Menu>;\r\n};\r\n\r\nSideMenu.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nSideMenu.defaultProps = {\r\n  children: (\r\n    <>\r\n      <p className=\"textUnderBtnsGame\">my games</p> \r\n      <GameButtons />\r\n    </>\r\n  ),\r\n};","import React from 'react';\r\nimport TopBar from '../Body/TopBar/TopBar'\r\nimport MainPanel from '../Body/MainPanel/MainPanel'\r\nimport InfoPanel from '../Body/InfoPanel/InfoPanel'\r\nimport NavState from '../../context/navState'\r\nimport { SideMenu } from '../SideMenu/SideMenu';\r\n\r\n\r\nfunction Main() {\r\n    return (\r\n      <NavState>\r\n        <div className=\"App\">\r\n          <TopBar />\r\n          <MainPanel />\r\n          <InfoPanel />\r\n          <SideMenu />\r\n        </div>\r\n      </NavState>\r\n    )\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react';\r\n\r\nvar data = {\"questions\":[\r\n    {\r\n        \"id\": 2,\r\n        \"title\": \"Введите Ваш возраст\",\r\n        \"allow_custom\": true,\r\n        \"filter\": \"number\",\r\n        \"answers\": [\r\n        ]\r\n    },\r\n    {\r\n        \"id\": 1,\r\n        \"title\": \"Укажите Ваш пол\",\r\n        \"allow_custom\": false,\r\n        \"filter\": \"\",\r\n        \"answers\": [\r\n            {\r\n                \"id\": 2,\r\n                \"title\": \"Ж\",\r\n            },\r\n            {\r\n                \"id\": 2,\r\n                \"title\": \"М\",\r\n            }\r\n        ]\r\n    }\r\n],\r\n\"hash\": \"19e0ff81\"}\r\n\r\nfunction Latest() {\r\n    return (\r\n        JSON.stringify(data, null, 1)\r\n    )\r\n};\r\n\r\nexport default Latest;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Main from './components/Pages/Main';\nimport Latest from './components/Pages/Latest';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n      <Switch>\n            <Route exact path=\"/\" component={ Main }/>\n            <Route exact path=\"/v1/latest\" component={ Latest }/>\n      </Switch>\n    </Router>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}